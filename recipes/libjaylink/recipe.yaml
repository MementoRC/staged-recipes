context:
  name: libjaylink
  version: "0.4.0"
  build_num: 0
  so_version: "0.2.1"
  major_so_version: "0"

package:
  name: ${{ name }}
  version: ${{ version }}

source:
  url: https://gitlab.zapb.de/libjaylink/libjaylink/-/archive/${{ version }}/libjaylink-${{ version }}.tar.gz
  sha256: 5557d623934a4bbc053c11f9a181375d7abeb76af910696d9e3d9b1de3bf6987
  patches:
    - if: win
      then:
        - patches/fix-types-discovery_tcp.c.patch
        - patches/fix-types-discovery_usb.c.patch
        - patches/fix-types-fileio.c.patch
        - patches/fix-types-socket.c.patch
        - patches/fix-types-strutil.c.patch
        - patches/fix-types-transport_tcp.c.patch
        - patches/fix-types-transport_usb.c.patch
        - patches/fix-uninitialized.patch
        - patches/add-jaylink.def.patch
        - patches/add-jaylink.lib-meson.build.patch

build:
  number: ${{ build_num }}

requirements:
  build:
    - ${{ compiler('c') }}
    - ${{ stdlib('c') }}
    - ninja
    - pkg-config
    - if: win
      then:
        - m2w64-binutils
  host:
    - libusb
    - meson >=1.1.0
  run_exports:
    - ${{ pin_subpackage('libjaylink', upper_bound='x.x') }}

tests:
  - package_contents:
      files:
        - if: linux
          then:
            - lib64/pkgconfig/libjaylink.pc
            - lib64/libjaylink.so
            - lib64/libjaylink.so.${{ so_version }}
            - lib64/libjaylink.so.${{ major_so_version }}
        - if: osx
          then:
            - lib/pkgconfig/libjaylink.pc
        - if: win
          then:
            - Library/lib/pkgconfig/libjaylink.pc
      include:
        - libjaylink/libjaylink.h
        - libjaylink/version.h
      lib:
        - if: osx
          then:
            - libjaylink.dylib
            - libjaylink.${{ major_so_version }}.dylib
        - if: win
          then:
            - jaylink.lib
            - libjaylink.lib
            - libjaylink.dll.a
      bin:
        - if: win
          then:
            - jaylink.dll
            - jaylink-${{ major_so_version }}.dll
            - libjaylink.dll
  - script:
      - if: win
        then:
          - python helpers\\verify_dll_def.py Library\\bin\\jaylink.dll libjaylink\\jaylink.def
        else:
          - echo "Only windows is THAT high-maintenance!"
    files:
      recipe:
        - helpers/verify_dll_def.py
      source:
        - libjaylink/jaylink.def
    requirements:
      run:
        - python

about:
  homepage: https://gitlab.zapb.de/libjaylink/libjaylink
  summary: 'libjaylink is a shared library written in C to access SEGGER J-Link.'
  description: |
    libjaylink is a shared library written in C to access SEGGER J-Link and
    compatible devices.
  license: GPL-2.0-or-later
  license_file: COPYING
  repository: https://gitlab.zapb.de/libjaylink/libjaylink

extra:
  recipe-maintainers:
    - MementoRC
  feedstock-name: libjaylink
