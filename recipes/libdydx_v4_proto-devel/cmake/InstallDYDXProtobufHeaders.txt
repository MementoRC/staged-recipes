set(dydx_protobuf_HEADERS)
set(DLL_EXPORT_HEADER_DIR "${CMAKE_BINARY_DIR}/_dll_export_headers")
file(MAKE_DIRECTORY ${DLL_EXPORT_HEADER_DIR})

foreach(_file ${PROTO_GENERATED_FILES})
  if(_file MATCHES ".h$")
    get_filename_component(_filename ${_file} NAME)
    string(MD5 _md5 ${_file})
    set(_new_file "${DLL_EXPORT_HEADER_DIR}/${_md5}_${_filename}")

    if(NOT ${_new_file} IN_LIST dydx_protobuf_HEADERS)
      list(APPEND dydx_protobuf_HEADERS ${_new_file})
      if(WIN32)
        add_custom_command(
          OUTPUT ${_new_file}
          COMMAND ${CMAKE_COMMAND} -E cat $ENV{RECIPE_DIR}/cmake/dydx_v4_proto_export.h > ${_new_file}
          COMMAND ${CMAKE_COMMAND} -E cat ${_file} >> ${_new_file}
          COMMAND ${CMAKE_COMMAND} -E copy ${_new_file} ${_file}
          DEPENDS ${_file}
          COMMENT "Pre-pending EXPORT_MACRO to ${_new_file}")
      else()
        add_custom_command(
          OUTPUT ${_new_file}
          COMMAND ${CMAKE_COMMAND} -E touch ${_new_file}
          DEPENDS ${_file})
      endif()
    endif()
  endif()
endforeach()

add_custom_target(generate_headers ALL DEPENDS ${dydx_protobuf_HEADERS})
add_dependencies(dydx_v4_proto generate_headers)

# Add a custom command to inspect the generated files
add_custom_command(TARGET dydx_v4_proto POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E echo "Inspecting generated files..."
    COMMAND ${CMAKE_COMMAND} -E cat ${PROTO_BINARY_DIR}/cosmos/base/v1beta1/coin.pb.h
    COMMAND ${CMAKE_COMMAND} -E cat ${PROTO_BINARY_DIR}/cosmos/base/v1beta1/coin.pb.cc
)

install(DIRECTORY ${PROTO_BINARY_DIR}/
    DESTINATION ${INCLUDE_INSTALL_DIR}
    COMPONENT protocol
    FILES_MATCHING PATTERN "*.h" PATTERN "CMakeFiles" EXCLUDE)
