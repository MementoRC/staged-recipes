set(dydx_protobuf_HEADERS)
set(DLL_EXPORT_HEADER_DIR "${CMAKE_BINARY_DIR}/_dll_export_headers")

if (WIN32)
    set(EXPORT_MACRO "#ifdef _WIN32\n  #ifdef BUILDING_DLL\n    #define DLL_EXPORT_API __declspec(dllexport)\n  #else\n    #define DLL_EXPORT_API __declspec(dllimport)\n  #endif\n#else\n  #define DLL_EXPORT_API\n#endif\n")
endif()

foreach(_file ${PROTO_GENERATED_FILES})
  if(_file MATCHES ".h$")
    if (WIN32)
      set(_new_file "${PROTO_HEADER_DIR}/${_file}")
      list(APPEND dydx_protobuf_HEADERS ${_new_file})
      string(REPLACE "/" "_" sanitized_file "${_file}")
      add_custom_command(
          OUTPUT ${_new_file}
          COMMAND ${CMAKE_COMMAND} -E copy ${_file} ${_new_file}
          COMMAND ${CMAKE_COMMAND} -E echo_append "${EXPORT_MACRO}" >> ${_new_file}
          DEPENDS ${_file}
          COMMENT "Copying and appending EXPORT_MACRO to ${_new_file}")
      add_custom_target(append_export_macro_${sanitized_file} DEPENDS ${_new_file})
      add_dependencies(dydx_v4_proto_obj append_export_macro_${sanitized_file})
    else()
      list(APPEND dydx_protobuf_HEADERS ${_file})
    endif()
  endif()
endforeach()

add_custom_target(generate_headers ALL DEPENDS ${dydx_protobuf_HEADERS})
add_dependencies(dydx_v4_proto_obj generate_headers)

install(DIRECTORY ${PROTO_BINARY_DIR}/ DESTINATION ${INCLUDE_INSTALL_DIR} COMPONENT protocol FILES_MATCHING PATTERN "*.h" PATTERN "CMakeFiles" EXCLUDE)