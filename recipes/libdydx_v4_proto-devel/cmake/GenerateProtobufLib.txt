set(PROTO_BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/_generated")
file(MAKE_DIRECTORY ${PROTO_BINARY_DIR})

add_library(_proto_objects OBJECT ${proto_files})
target_include_directories(_proto_objects PUBLIC ${PROTO_BINARY_DIR})

if(WIN32)
    file(TO_CMAKE_PATH "$ENV{RECIPE_DIR}/helpers/add_protoc_export.cc" PROTOC_EXPORT_PATH)
    add_executable(add_protoc_export ${PROTOC_EXPORT_PATH})
    target_include_directories(add_protoc_export PRIVATE ${Protobuf_INCLUDE_DIRS})
    target_compile_definitions(add_protoc_export PRIVATE PROTOBUF_USE_DLLS PUBLIC PROTOBUF_USE_DLLS)
    target_link_libraries(add_protoc_export PRIVATE ${Protobuf_LIBRARIES} abseil_dll ${Protobuf_PROTOC_LIBRARIES})
    set_target_properties(add_protoc_export PROPERTIES OUTPUT_NAME protoc-gen-add_exports CXX_STANDARD_REQUIRED ON)

    add_dependencies(_proto_objects add_protoc_export)

    protobuf_generate(
        TARGET _proto_objects
        PROTOC_OUT_DIR ${PROTO_BINARY_DIR}
        OUT_VAR PROTO_GENERATED_FILES
        PLUGIN "add_exports=$<TARGET_FILE:add_protoc_export>"
        EXPORT_MACRO DYDX_V4_PROTO_EXPORT
        PROTOC_OPTIONS "--add_exports_out=${PROTO_BINARY_DIR}"
        LANGUAGE cpp)
else()
    protobuf_generate(
        TARGET _proto_objects
        PROTOC_OUT_DIR ${PROTO_BINARY_DIR}
        OUT_VAR PROTO_GENERATED_FILES)
endif()

add_library(dydx_v4_proto SHARED ${PROTO_GENERATED_FILES})
set_target_properties(dydx_v4_proto PROPERTIES POSITION_INDEPENDENT_CODE 1)
target_compile_definitions(dydx_v4_proto PRIVATE PROTOBUF_USE_DLLS PUBLIC PROTOBUF_USE_DLLS)
target_include_directories(dydx_v4_proto PUBLIC ${PROTO_BINARY_DIR} $ENV{PREFIX}/include $ENV{PREFIX}/Library/include)

if(WIN32)
    set_target_properties(dydx_v4_proto PROPERTIES CXX_VISIBILITY_PRESET default VISIBILITY_INLINES_HIDDEN OFF)
    target_link_directories(dydx_v4_proto PUBLIC ${CMAKE_INSTALL_PREFIX}/lib ${CMAKE_INSTALL_PREFIX}/Library/lib)
    target_link_libraries(dydx_v4_proto PUBLIC ${Protobuf_LIBRARIES} abseil_dll)
    add_link_options(/LTCG /OPT:REF /OPT:ICF)
else()
    target_link_libraries(dydx_v4_proto PUBLIC protobuf::libprotobuf)
endif()
